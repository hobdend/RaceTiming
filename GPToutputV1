#include <stdio.h>
#include <time.h>
#include <unistd.h> // for sleep function
#include "flipperzero/api/nfc.h"
#include "flipperzero/api/sound.h" // for sound functions

// Function to get the current date and time as a string
void get_current_datetime(char *buffer, size_t buffer_size) {
    time_t rawtime;
    struct tm *timeinfo;

    time(&rawtime);
    timeinfo = localtime(&rawtime);

    strftime(buffer, buffer_size, "%Y-%m-%d %H:%M:%S", timeinfo);
}

// Function to log the NFC tag read event
void log_nfc_event(const char *tag_id) {
    FILE *log_file = fopen("nfc_log.txt", "a");
    if (log_file == NULL) {
        printf("Error opening log file!\n");
        return;
    }

    char datetime[20];
    get_current_datetime(datetime, sizeof(datetime));

    fprintf(log_file, "Date: %s, Tag ID: %s\n", datetime, tag_id);
    fclose(log_file);
}

// Function to read NFC tag
void read_nfc_tag() {
    char tag_id[128];
    // Assuming the NFC library provides a function `nfc_read_tag` that fills the tag_id buffer
    int result = nfc_read_tag(tag_id, sizeof(tag_id));

    if (result == 0) {
        printf("Tag ID: %s\n", tag_id);
        log_nfc_event(tag_id);
        sound_beep(); // Make a beep sound upon successful read
    } else {
        printf("Failed to read NFC tag!\n");
    }
}

int main() {
    printf("Starting NFC reader...\n");

    while (1) {
        read_nfc_tag();
        sleep(5);  // Delay between reads increased to 5 seconds
    }

    return 0;
}
